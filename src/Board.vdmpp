class Board

-- Position is a pair of coordenates
types
		public Position:: x:nat  y:nat
values
-- TODO Define values here
		private max_coord : nat = 9;
instance variables

	private board : map Position to Cell := {|->};
	private pieces : map  Piece to Position := {|->};
-- TODO Define instance variables here
operations
-- TODO Define operations here

		public Board : () ==> Board
  	Board() ==
  	(
  		for i = 0 to max_coord by 1 do
  		(
  			for j = 0 to max_coord by 1 do
  			(
  				 board := board ++ {mk_Position(i,j)|-> new Cell(i,j)};
  			)
  		)
		);

  public validCoords : Position ==> bool
  validCoords(position) ==
  (
  	return position.x < max_coord and position.y < max_coord;
  )
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Board